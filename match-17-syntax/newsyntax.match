head = fn([]) {
   ok;
}
([Head : Tail]) {
   io->format("~p~n", [Head]);
   head(Tail);
};

append = fn(List1, List2) {
    [List1 : List2];
};

match = fn((name, Name, age, Age)) {
   io->format("name: ~p age: ~p~n", [Name, Age]);
};

match1 = fn(name Name age Age) {
   io->format("name: ~p age: ~p~n", [Name, Age]);
};

testMatch = fn(Name, Age) {
    match((name, Name, age, Age));
    match1(name Name age Age);
};

function = fn (Var OtherOne) {
    Var + OtherOne;
};

say_hi = fn(Name) {
    io->format("~p~n", [Name]);
};

say_hi1 = fn(Name) {
    format<-io("~p~n" [Name]);
};

convert = fn(Value from minutes to seconds) {
    Value * 60;
};

test_convert = fn(Value) {
    convert(Value from minutes to seconds);
};

oldStyle = fn(One, Two) {
    One - Two;
};

testOldStyle = fn(One Two) {
    oldStyle(One Two);
};

closure = fn (By) {
   fn (Value) {
       By * Value;
   };
};

testClosure = fn() {
    ByTwo = closure(2);
    io->format("2 * 2: ~p~n", [ByTwo(2)]);
    io->format("3 * 2: ~p~n", [ByTwo(3)]);
    ByTwo(4);
};

callcall = fn(One, Two) {
    closure(One)(Two);
};

testMatch = fn(Value) {
    2 = 2;
    (1, 2) = (1, 2);
    (1, "mariano", false) = (1, Value, false);
};

listmatch = fn ([Head, First, Second : _Tail]) {
    Head + First + Second;
};
